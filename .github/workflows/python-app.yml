# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build and Deploy Flask application

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
  GKE_CLUSTER: cluster-1    
  GKE_ZONE: asia-south1-c   
  DEPLOYMENT_NAME: gke-test 
  IMAGE: flask-assg-poc
  GCR_JSON_KEY: gcr-json-key
  GCR_EMAIL: panduranga.anantatmula@zemosolabs.com

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    # Build and Push Docker image to GCR
    - name: Build and Push Image to GCR 
      uses: RafikFarhad/push-to-gcr-github-action@v3.0.2
      with:
        gcloud_service_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
        registry: gcr.io
        project_id: zevoice-180404
        image_name: flask-assg-poc

    # Deploy the Docker image to the GKE cluster
    - name: Deploy to GKE
      run: |-
        kubectl create secret docker-registry $GCR_JSON_KEY --docker-server=https://gcr.io --docker-username=_json_key --docker-password="$(openssl enc -base64 -d <<< ${{secrets.GCLOUD_SERVICE_KEY}})" --docker-email= $GCR_EMAIL
        kubectl apply -f deployment.yml
        kubectl apply -f service.yml
        kubectl set image deployment.apps/gke-test gke-test=gcr.io/$PROJECT_ID/$IMAGE:latest   
